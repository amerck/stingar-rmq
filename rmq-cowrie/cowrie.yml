---
  - hosts: all

    tasks:
      - name: Cowrie | Gather | print os info
        debug:
          msg: "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}"

      - name: Cowrie | Gather | os info
        include_vars: "{{ item }}"
        with_first_found:
          - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
          - "{{ ansible_distribution }}.yml"
        tags: vars

      - name: Cowrie | Gather | default info
        include_vars:
          file: default.yml
        tags: vars

      - name: Cowrie | install non-specific packages
        package:
          name: "{{ item }}"
        with_items: "{{ pkgs }}"

      - name: Cowrie | install os-specific packages
        package:
          name: "{{ item }}"
        with_items: "{{ pkgs_osspec }}"

      - name: Cowrie | add users group
        group:
          name: users

      - name: Cowrie | create cowrie user
        user:
          name: cowrie
          shell: /bin/bash
          group: users

      - name: Cowrie | clone cowrie source
        git:
          repo: "{{ cowrie_repo }}"
          version: "{{ cowrie_version }}"
          dest: /opt/cowrie

      - name: Cowrie | update pip
        pip:
          name: pip
          virtualenv: /opt/cowrie/cowrie-env
          state: latest
        tags:
          - skip_ansible_lint

      - name: Cowrie | update setuptools
        pip:
          name: setuptools
          virtualenv: /opt/cowrie/cowrie-env
          state: latest
        tags:
          - skip_ansible_lint


      - name: Cowrie | install cowrie
        pip:
          requirements: /opt/cowrie/requirements.txt
          virtualenv: /opt/cowrie/cowrie-env

      - name: Cowrie | install extra python deps
        pip:
          name: "{{ item }}"
          state: present
        with_items: "{{ cowrie_pip_pkgs }}"

      - name: Cowrie | install extra python deps for virtualenv
        pip:
          name: "{{ item }}"
          state: present
          virtualenv: /opt/cowrie/cowrie-env
        with_items: "{{ cowrie_pip_pkgs }}"


      - name: Cowrie | copy stingar amqp plugin
        copy:
          src: plugins/stingaramqp.py
          dest: "{{ cowrie_dir }}/cowrie/output"

      - name: Cowrie | set file perms
        file:
          path: "{{ cowrie_dir }}"
          owner: "{{ cowrie_user }}"
          group: root
          recurse: yes

      - name: Cowrie | copy cowrie sysconfig file
        copy:
          dest: "{{ sysconfig_dir }}/cowrie"
          src: cowrie.sysconfig
          mode: 0644

      - name: Cowrie | install Runit for CentOS hosts
        yum:
          name: "{{ runit_rpm_src }}"
          state: present
        when: ansible_distribution|lower == 'centos'

      - name: Cowrie | create runit directories
        file:
          state: directory
          path: "{{ runit_service_dir }}"
          mode: 0755

      - name: Cowrie | create cowrie runit run file
        template:
          src: cowrie.run.j2
          dest: "{{ runit_service_dir }}/run"
          mode: 0755
